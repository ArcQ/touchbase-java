type Query {
  user(username: String, me: Boolean): User
  user: [User]
  base(uuid: String): Base
  bases(me: Boolean): [Base]
}

type Mutation {
  createBase(input: Base): Base
  updateBase(input: Base): Base
}

type User {
  username: String!
  email: String!
  score: Float
  firstName: String!
  lastName: String!
  bases: [Base]
  created: [Base]
  owns: [Base]
}

type Base {
  uuid: String!
  name: String!
  score: Float
  imageUrl: String
  members: User
  admin: User
  creator: User
}
