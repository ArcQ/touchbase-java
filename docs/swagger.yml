openapi: 3.0.1
info:
  title: core-api
  version: "0.0"
paths:
  /api/v1/base:
    get:
      operationId: getBases
      parameters: []
      responses:
        default:
          description: getBases default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Base'
    put:
      operationId: patchBase
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseReq'
        required: true
      responses:
        default:
          description: patchBase default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Base'
    post:
      operationId: postBase
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseReq'
        required: true
      responses:
        default:
          description: postBase default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Base'
  /api/v1/base/{baseId}/user/{username}:
    post:
      operationId: addUserToBaseAsOwner
      parameters:
      - name: baseId
        in: path
        required: true
        schema:
          type: string
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: addUserToBaseAsOwner default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Base'
    delete:
      operationId: removeUserFromBaseAsOwner
      parameters:
      - name: baseId
        in: path
        required: true
        schema:
          type: string
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: removeUserFromBaseAsOwner default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Base'
  /api/v1/base/{baseId}:
    delete:
      operationId: makeBaseInactive
      parameters:
      - name: baseId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: makeBaseInactive default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
  /api/v1/person/me:
    get:
      operationId: getMe
      parameters: []
      responses:
        default:
          description: getMe default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
  /api/v1/person/{username}:
    get:
      operationId: getPerson
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: getPerson default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
  /api/v1/person:
    post:
      operationId: postPerson
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        default:
          description: postPerson default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
components:
  schemas:
    TouchBaseDomain:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    TouchBaseEntity:
      allOf:
      - $ref: '#/components/schemas/TouchBaseDomain'
      - type: object
        properties:
          creator:
            $ref: '#/components/schemas/Person'
          owner:
            $ref: '#/components/schemas/Person'
    Person:
      allOf:
      - $ref: '#/components/schemas/TouchBaseDomain'
      - type: object
        properties:
          authId:
            type: string
          username:
            type: string
          email:
            type: string
          score:
            type: number
            format: double
          firstName:
            type: string
          lastName:
            type: string
          bases:
            type: array
            items:
              $ref: '#/components/schemas/Base'
          created:
            type: array
            items:
              $ref: '#/components/schemas/Base'
          owns:
            type: array
            items:
              $ref: '#/components/schemas/Base'
    Base:
      allOf:
      - $ref: '#/components/schemas/TouchBaseEntity'
      - $ref: '#/components/schemas/TouchBaseDomain'
      - type: object
        properties:
          name:
            type: string
          score:
            type: number
            format: double
          imageUrl:
            type: string
          active:
            type: boolean
          members:
            type: array
            items:
              $ref: '#/components/schemas/Person'
          isActive:
            type: boolean
    BaseReq:
      type: object
      properties:
        name:
          type: string
        score:
          type: number
          format: double
        imageUrl:
          type: string
    Success:
      type: object
