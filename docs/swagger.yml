openapi: 3.0.1
info:
  title: core-api
  version: "0.0"
paths:
  /api/v1/baseJoin/me:
    get:
      description: Not Implemented Yet
      operationId: getBases
      parameters: []
      responses:
        default:
          description: getBases default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseJoin'
  /api/v1/baseJoin:
    post:
      description: Not Implemented Yet
      operationId: requestIntoBase
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseJoinReq'
        required: true
      responses:
        default:
          description: requestIntoBase default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseJoin'
  /api/v1/baseJoin/{baseId}:
    delete:
      description: Not Implemented Yet
      operationId: deleteBaseInvite
      parameters:
      - name: baseId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: deleteBaseInvite default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
  /api/v1/mission/me:
    get:
      description: Not Implemented Yet
      operationId: getOwnActiveMissions
      parameters: []
      responses:
        default:
          description: getOwnActiveMissions default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mission'
  /api/v1/mission/progress:
    post:
      description: Not Implemented Yet
      operationId: progressMission
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                progressReq:
                  $ref: '#/components/schemas/ProgressReq'
        required: true
      responses:
        default:
          description: progressMission default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mission'
  /api/v1/base:
    get:
      operationId: getOwnBases
      parameters: []
      responses:
        default:
          description: getOwnBases default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRes_Base_'
    post:
      operationId: postBase
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseReq'
        required: true
      responses:
        default:
          description: postBase default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Base'
  /api/v1/base/{baseId}:
    get:
      operationId: getBaseIfOwn
      parameters:
      - name: baseId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        default:
          description: getBaseIfOwn default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Base'
  /api/v1/user/me:
    get:
      operationId: getMe
      parameters: []
      responses:
        default:
          description: getMe default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    TouchBasePostgresDomain:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        creator:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    User:
      allOf:
      - $ref: '#/components/schemas/TouchBasePostgresDomain'
      - type: object
        properties:
          id:
            type: string
            format: uuid
            nullable: true
          createdAt:
            type: string
            format: date-time
          updatedAt:
            type: string
            format: date-time
          authKey:
            type: string
          username:
            type: string
          email:
            type: string
          score:
            type: number
            format: double
          firstName:
            type: string
          lastName:
            type: string
          imageUrl:
            type: string
    BaseJoin:
      allOf:
      - $ref: '#/components/schemas/TouchBasePostgresDomain'
      - type: object
        properties:
          baseId:
            type: string
          baseJoinAction:
            $ref: '#/components/schemas/BaseJoinAction'
    BaseJoinAction:
      type: string
      enum:
      - Request
      - Invite
    BaseJoinReq:
      type: object
      properties:
        baseId:
          type: string
        userId:
          type: string
        baseJoinAction:
          $ref: '#/components/schemas/BaseJoinAction'
    Success:
      type: object
      properties:
        status:
          type: string
    Mission:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        startedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        assignedUser:
          $ref: '#/components/schemas/User'
        assignedBase:
          $ref: '#/components/schemas/Base'
        storedMissionTemplate:
          $ref: '#/components/schemas/MissionTemplate'
    Base:
      allOf:
      - $ref: '#/components/schemas/TouchBasePostgresDomain'
      - type: object
        properties:
          name:
            type: string
          score:
            type: number
            format: double
          imageUrl:
            type: string
          active:
            type: boolean
          members:
            type: array
            items:
              $ref: '#/components/schemas/BaseMember'
          chats:
            type: array
            items:
              $ref: '#/components/schemas/Chat'
    BaseMember:
      allOf:
      - $ref: '#/components/schemas/TouchBasePostgresDomain'
      - type: object
        properties:
          base:
            $ref: '#/components/schemas/Base'
          user:
            $ref: '#/components/schemas/User'
          role:
            $ref: '#/components/schemas/Role'
    Role:
      type: string
      enum:
      - MEMBER
      - ADMIN
    Chat:
      allOf:
      - $ref: '#/components/schemas/TouchBasePostgresDomain'
      - type: object
        properties:
          base:
            $ref: '#/components/schemas/Base'
          chatpiChatId:
            type: string
    MissionTemplate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        scoreReward:
          type: number
          format: double
        missionType:
          $ref: '#/components/schemas/MissionType'
    MissionType:
      type: string
      enum:
      - PERIODIC
      - WEEKLY
      - ONE_TIME
    ProgressReq:
      type: object
      properties:
        value:
          type: integer
          format: int32
    ListRes_Base_:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/Base'
    BaseReq:
      type: object
      properties:
        name:
          type: string
        imageUrl:
          type: string
