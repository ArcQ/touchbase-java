swagger: '2.0'
info:
  title: core-api
  version: '0.0'
paths:
  /api/v1/base:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        default:
          description: getBases default response
          schema:
            items:
              $ref: '#/definitions/Base'
            type: array
      operationId: getBases
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BaseReq'
      responses:
        default:
          description: postBase default response
          schema:
            $ref: '#/definitions/Base'
      operationId: postBase
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BaseReq'
      responses:
        default:
          description: patchBase default response
          schema:
            $ref: '#/definitions/Base'
      operationId: patchBase
  '/api/v1/base/{baseId}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: baseId
          required: true
          type: string
      responses:
        default:
          description: makeBaseInactive default response
          schema:
            $ref: '#/definitions/Success'
      operationId: makeBaseInactive
  '/api/v1/base/{baseId}/user/{username}':
    delete:
      produces:
        - application/json
      parameters:
        - in: path
          name: baseId
          required: true
          type: string
        - in: path
          name: username
          required: true
          type: string
      responses:
        default:
          description: removeUserFromBaseAsOwner default response
          schema:
            $ref: '#/definitions/Base'
      operationId: removeUserFromBaseAsOwner
    post:
      produces:
        - application/json
      parameters:
        - in: path
          name: baseId
          required: true
          type: string
        - in: path
          name: username
          required: true
          type: string
      responses:
        default:
          description: addUserToBaseAsOwner default response
          schema:
            $ref: '#/definitions/Base'
      operationId: addUserToBaseAsOwner
  /api/v1/person:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Person'
      responses:
        default:
          description: postPerson default response
          schema:
            $ref: '#/definitions/Person'
      operationId: postPerson
  /api/v1/person/me:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        default:
          description: getMe default response
          schema:
            $ref: '#/definitions/Person'
      operationId: getMe
  '/api/v1/person/{username}':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          type: string
      responses:
        default:
          description: getPerson default response
          schema:
            $ref: '#/definitions/Person'
      operationId: getPerson
definitions:
  Base:
    allOf:
      - $ref: '#/definitions/TouchBaseEntity'
      - $ref: '#/definitions/TouchBaseDomain'
      - properties:
          active:
            type: boolean
          imageUrl:
            type: string
          isActive:
            type: boolean
          members:
            items:
              $ref: '#/definitions/Person'
            type: array
          name:
            type: string
          score:
            format: double
            type: number
        type: object
  BaseReq:
    properties:
      imageUrl:
        type: string
      name:
        type: string
      score:
        format: double
        type: number
    type: object
  Person:
    allOf:
      - $ref: '#/definitions/TouchBaseDomain'
      - properties:
          authId:
            type: string
          bases:
            items:
              $ref: '#/definitions/Base'
            type: array
          created:
            items:
              $ref: '#/definitions/Base'
            type: array
          email:
            type: string
          firstName:
            type: string
          lastName:
            type: string
          owns:
            items:
              $ref: '#/definitions/Base'
            type: array
          score:
            format: double
            type: number
          username:
            type: string
        type: object
  Success:
    type: object
  TouchBaseDomain:
    properties:
      createdAt:
        format: date-time
        type: string
      updatedAt:
        format: date-time
        type: string
      uuid:
        format: uuid
        type: string
    type: object
  TouchBaseEntity:
    allOf:
      - $ref: '#/definitions/TouchBaseDomain'
      - properties:
          creator:
            $ref: '#/definitions/Person'
          owner:
            $ref: '#/definitions/Person'
        type: object
x-components: {}

